# coding=utf-8
# Androxus bot
# OnReactionEvent.py

__author__ = 'Rafael'

import googletrans
from discord.ext import commands

from discord_bot.database.Conexao import Conexao
from discord_bot.database.Repositories.BlacklistRepository import BlacklistRepository


class OnReactionEvent(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_reaction_add(self, reaction, user):
        if (not self.bot.is_ready()) or user.bot:
            return
        if user.id == self.bot.user.id:
            return
        conexao = Conexao()
        banido = BlacklistRepository().get_pessoa(conexao, user.id)
        if banido:
            return conexao.fechar()
        # bandeiras com suas respectivas lÃ­nguas:
        languages = {
            'ğŸ‡¿ğŸ‡¦': 'af',
            'ğŸ‡¦ğŸ‡±': 'sq',
            'ğŸ‡ªğŸ‡¹': 'am',
            'ğŸ‡¸ğŸ‡¦': 'ar',
            'ğŸ‡§ğŸ‡­': 'ar',
            'ğŸ‡¶ğŸ‡¦': 'ar',
            'ğŸ‡¹ğŸ‡©': 'ar',
            'ğŸ‡°ğŸ‡²': 'ar',
            'ğŸ‡©ğŸ‡¯': 'ar',
            'ğŸ‡°ğŸ‡²': 'ar',
            'ğŸ‡¦ğŸ‡ª': 'ar',
            'ğŸ‡ªğŸ‡·': 'ar',
            'ğŸ‡ªğŸ‡¬': 'ar',
            'ğŸ‡¾ğŸ‡ª': 'ar',
            'ğŸ‡®ğŸ‡¶': 'ar',
            'ğŸ‡¯ğŸ‡´': 'ar',
            'ğŸ‡±ğŸ‡¾': 'ar',
            'ğŸ‡±ğŸ‡§': 'ar',
            'ğŸ‡°ğŸ‡¼': 'ar',
            'ğŸ‡²ğŸ‡¦': 'ar',
            'ğŸ‡²ğŸ‡·': 'ar',
            'ğŸ‡´ğŸ‡²': 'ar',
            'ğŸ‡¸ğŸ‡¾': 'ar',
            'ğŸ‡¸ğŸ‡´': 'ar',
            'ğŸ‡¹ğŸ‡³': 'ar',
            'ğŸ‡¸ğŸ‡©': 'ar',
            'ğŸ‡¦ğŸ‡²': 'hy',
            'ğŸ‡¦ğŸ‡¿': 'az',
            'ğŸ‡ªğŸ‡¸': 'eu',
            'ğŸ‡§ğŸ‡¾': 'be',
            'ğŸ‡§ğŸ‡©': 'bn',
            'ğŸ‡§ğŸ‡¦': 'bs',
            'ğŸ‡§ğŸ‡¬': 'bg',
            'ğŸ‡¦ğŸ‡©': 'ca',
            'ğŸ‡²ğŸ‡¼': 'ny',
            'ğŸ‡¨ğŸ‡³': 'zh-cn',
            'ğŸ‡¨ğŸ‡´': 'co',
            'ğŸ‡­ğŸ‡·': 'hr',
            'ğŸ‡¨ğŸ‡¿': 'cs',
            'ğŸ‡©ğŸ‡°': 'da',
            'ğŸ‡³ğŸ‡±': 'nl',
            'ğŸ‡ºğŸ‡¸': 'en',
            'ğŸ‡¦ğŸ‡¬': 'en',
            'ğŸ‡§ğŸ‡¸': 'en',
            'ğŸ‡§ğŸ‡§': 'en',
            'ğŸ‡§ğŸ‡¿': 'en',
            'ğŸ‡§ğŸ‡¼': 'en',
            'ğŸ‡¨ğŸ‡¦': 'en',
            'ğŸ‡¦ğŸ‡º': 'en',
            'ğŸ‡©ğŸ‡²': 'en',
            'ğŸ‡¬ğŸ‡­': 'en',
            'ğŸ‡¬ğŸ‡²': 'en',
            'ğŸ‡¬ğŸ‡©': 'en',
            'ğŸ‡¬ğŸ‡¾': 'en',
            'ğŸ‡®ğŸ‡³': 'en',
            'ğŸ‡¸ğŸ‡§': 'en',
            'ğŸ‡²ğŸ‡­': 'en',
            'ğŸ‡¯ğŸ‡²': 'en',
            'ğŸ‡±ğŸ‡·': 'en',
            'ğŸ‡®ğŸ‡ª': 'en',
            'ğŸ‡±ğŸ‡¸': 'en',
            'ğŸ‡²ğŸ‡¼': 'en',
            'ğŸ‡«ğŸ‡²': 'en',
            'ğŸ‡²ğŸ‡º': 'en',
            'ğŸ‡³ğŸ‡¦': 'en',
            'ğŸ‡±ğŸ‡¨': 'en',
            'ğŸ‡¼ğŸ‡¸': 'en',
            'ğŸ‡¬ğŸ‡§': 'en',
            'ğŸ‡µğŸ‡¬': 'en',
            'ğŸ‡µğŸ‡¼': 'en',
            'ğŸ‡³ğŸ‡¿': 'en',
            'ğŸ‡³ğŸ‡¬': 'en',
            'ğŸ‡»ğŸ‡¨': 'en',
            'ğŸ‡°ğŸ‡³': 'en',
            'ğŸ‡¸ğŸ‡±': 'en',
            'ğŸ‡¸ğŸ‡¿': 'en',
            'ğŸ‡¹ğŸ‡»': 'en',
            'ğŸ‡ºğŸ‡¬': 'en',
            'ğŸ‡¿ğŸ‡²': 'en',
            'ğŸ‡¿ğŸ‡¼': 'en',
            'ğŸ‡¹ğŸ‡´': 'en',
            'ğŸ‡¹ğŸ‡¹': 'en',
            'ğŸ‡ªğŸ‡ª': 'et',
            'ğŸ‡µğŸ‡­': 'tl',
            'ğŸ‡«ğŸ‡®': 'fi',
            'ğŸ‡«ğŸ‡·': 'fr',
            'ğŸ‡¬ğŸ‡ª': 'ka',
            'ğŸ‡©ğŸ‡ª': 'de',
            'ğŸ‡¨ğŸ‡¾': 'el',
            'ğŸ‡¬ğŸ‡·': 'el',
            'ğŸ‡µğŸ‡°': 'gu',
            'ğŸ‡­ğŸ‡¹': 'ht',
            'ğŸ‡®ğŸ‡±': 'he',
            'ğŸ‡®ğŸ‡³': 'hi',
            'ğŸ‡­ğŸ‡º': 'hu',
            'ğŸ‡®ğŸ‡ª': 'is',
            'ğŸ‡®ğŸ‡©': 'id',
            'ğŸ‡®ğŸ‡ª': 'ga',
            'ğŸ‡®ğŸ‡¹': 'it',
            'ğŸ‡¯ğŸ‡µ': 'ja',
            'ğŸ‡°ğŸ‡¿': 'kk',
            'ğŸ‡°ğŸ‡­': 'km',
            'ğŸ‡°ğŸ‡·': 'ko',
            'ğŸ‡¹ğŸ‡·': 'ku',
            'ğŸ‡°ğŸ‡¬': 'ky',
            'ğŸ‡±ğŸ‡¦': 'lo',
            'ğŸ‡»ğŸ‡¦': 'la',
            'ğŸ‡±ğŸ‡»': 'lv',
            'ğŸ‡±ğŸ‡¹': 'lt',
            'ğŸ‡±ğŸ‡º': 'lb',
            'ğŸ‡²ğŸ‡°': 'mk',
            'ğŸ‡²ğŸ‡¬': 'mg',
            'ğŸ‡§ğŸ‡³': 'ms',
            'ğŸ‡²ğŸ‡¾': 'ml',
            'ğŸ‡²ğŸ‡¹': 'mt',
            'ğŸ‡²ğŸ‡³': 'mn',
            'ğŸ‡²ğŸ‡²': 'my',
            'ğŸ‡³ğŸ‡µ': 'ne',
            'ğŸ‡³ğŸ‡´': 'no',
            'ğŸ‡¦ğŸ‡«': 'ps',
            'ğŸ‡®ğŸ‡·': 'fa',
            'ğŸ‡µğŸ‡±': 'pl',
            'ğŸ‡§ğŸ‡·': 'pt',
            'ğŸ‡¦ğŸ‡´': 'pt',
            'ğŸ‡²ğŸ‡¿': 'pt',
            'ğŸ‡µğŸ‡¹': 'pt',
            'ğŸ‡¬ğŸ‡¼': 'pt',
            'ğŸ‡¹ğŸ‡±': 'pt',
            'ğŸ‡²ğŸ‡´': 'pt',
            'ğŸ‡¨ğŸ‡»': 'pt',
            'ğŸ‡¸ğŸ‡¹': 'pt',
            'ğŸ‡²ğŸ‡©': 'ro',
            'ğŸ‡·ğŸ‡´': 'ro',
            'ğŸ‡§ğŸ‡¾': 'ru',
            'ğŸ‡·ğŸ‡º': 'ru',
            'ğŸ‡¼ğŸ‡¸': 'sm',
            'ğŸ‡·ğŸ‡¸': 'sr',
            'ğŸ‡±ğŸ‡°': 'si',
            'ğŸ‡¸ğŸ‡°': 'sk',
            'ğŸ‡¸ğŸ‡®': 'sl',
            'ğŸ‡¸ğŸ‡´': 'so',
            'ğŸ‡ºğŸ‡¾': 'es',
            'ğŸ‡§ğŸ‡´': 'es',
            'ğŸ‡¨ğŸ‡±': 'es',
            'ğŸ‡¦ğŸ‡·': 'es',
            'ğŸ‡¨ğŸ‡´': 'es',
            'ğŸ‡¨ğŸ‡·': 'es',
            'ğŸ‡¨ğŸ‡º': 'es',
            'ğŸ‡¸ğŸ‡»': 'es',
            'ğŸ‡ªğŸ‡¨': 'es',
            'ğŸ‡ªğŸ‡¸': 'es',
            'ğŸ‡¬ğŸ‡¹': 'es',
            'ğŸ‡­ğŸ‡³': 'es',
            'ğŸ‡¬ğŸ‡¶': 'es',
            'ğŸ‡³ğŸ‡®': 'es',
            'ğŸ‡©ğŸ‡´': 'es',
            'ğŸ‡µğŸ‡ª': 'es',
            'ğŸ‡µğŸ‡¾': 'es',
            'ğŸ‡µğŸ‡¦': 'es',
            'ğŸ‡»ğŸ‡ª': 'es',
            'ğŸ‡¹ğŸ‡¿': 'sw',
            'ğŸ‡¸ğŸ‡ª': 'sv',
            'ğŸ‡¹ğŸ‡­': 'th',
            'ğŸ‡¹ğŸ‡²': 'tr',
            'ğŸ‡ºğŸ‡¦': 'uk',
            'ğŸ‡»ğŸ‡³': 'vi',
            'ğŸ‡¿ğŸ‡¦': 'xh'
        }
        id_msg = reaction.message.id
        if not (id_msg in self.bot.msg_traduzidas):
            for flag_lang in languages.items():
                if str(reaction) == flag_lang[0]:
                    # evita que a pessoa fique usando o comando na mesma mensagem
                    self.bot.msg_traduzidas.append(id_msg)
                    frase = reaction.message.content
                    # anti mention:
                    if reaction.message.mentions:  # se tiver alguma menÃ§Ã£o na mensagem
                        for mention in reaction.message.mentions:
                            frase = frase.replace(f'<@{mention.id}>', '')
                            frase = frase.replace(f'<@!{mention.id}>', '')
                            frase = frase.replace(f'<@&{mention.id}>', '')
                    frase = frase.replace(f'@', '@\uFEFF')  # quebra o @everyone e o @here
                    # se apÃ³s a remoÃ§Ã£o das menÃ§Ãµes, nÃ£o sobrar nada, para a execuÃ§Ã£o
                    if len(frase.replace(' ', '')) == 0: return
                    msg = googletrans.Translator().translate(frase, dest=flag_lang[-1]).text.capitalize()
                    await reaction.message.channel.send(content=f'{user.mention} {msg}')
                    return


def setup(bot):
    bot.add_cog(OnReactionEvent(bot))
